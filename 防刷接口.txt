 /**
     * 下载有礼接口
     * 每下载安装并启动一个游戏，即可获得原力值和抽奖次数：原力值+20，抽奖次数+1
     */
    public function downAction()
    {
        //每个游戏，下载成功只能领取一次收益
        $request = $this->getRequest();
        $callback = trim($request->getParam('callback'));
        $app_name = trim($request->getParam('app_name'));

        $this->_checkFestivalStatus($callback);
        $stat=0;
        $qid = $this->uid;

        $incrForceNum  = 20;
        $incrLotteryNum = 1;

        //加一层防刷逻辑，放在更新之前判断
        $cacheKey = self::REDIS_PREFIX.'download:'.$qid;
        $cacheManager = Helper_CacheManager::getInstance();
        $cacheManager->setCacheKey($cacheKey);
        $cacheData = $cacheManager->readCache();
        if ($cacheManager->isRefreshCache($cacheData['data'])) { //缓存没有
            $modelUser = new Festival_UserModel();
            $stat = $modelUser->AvoidRepeat($qid);
            $cacheData = $cacheManager->setCache(array('data' => $stat), self::CACHE_EXPIRE); //再塞回缓存
        }
        if ($stat==0) //更新状态表不成功，代表判断条件下已经有下载行为  直接抛出
        {
            Helper_Render::json(-1, 'Error', array(), $callback);
        }
        //更新数值
        $incrData = array('force_num' => $incrForceNum, 'lottery_num' => $incrLotteryNum);
        $modelUser = new Festival_UserModel();
        $modelUser->incrUser($qid, $incrData);
        //记日志
        $log = array('act_type' => 5, 'app_name' => $app_name, 'force_num' => $incrForceNum, 'lottery_num' => $incrLotteryNum);
        $modelUser = new Festival_LogModel();
        $modelUser->logUser($qid, $log);
        Helper_Render::json(0, 'success', array(), $callback);
    }

	
	
	
	//user
	
  public function AvoidRepeat($qid)
    {
        $today=date('Ymd');
        //防刷，新建表mgame_user  判断用户每天，每个游戏的动作 的状态，以此来判断是否是第一次做
        if (empty($qid)) {
            return false;
        }

        $download_act = array(
            'table_name'=>'festival_user_act_status',
            'act_type'    => 1,//下载行为代码
            //'soft_id'  => [1,2,3,4,5],//游戏id代码
            'day'=>$today,//
            'status'=>1
        );
        //$decrLotteryNum = (int)$data['lottery_num'];

        $sql = "UPDATE " . $download_act['table_name'] . " SET status = :status WHERE qid = :qid
        AND act_type=:act_type AND day=:day ";
        //AND soft_id in :soft_id AND day=:day";

        $stmt = $this->_dao->prepare($sql);
        $result = $stmt->execute(array(':qid' => $qid,':status' => $download_act['status'],':act_type' =>$download_act['act_type'],
            ':day' => $download_act['day']));
        $count = $stmt->rowCount();
        return $count;
    }
	
	
	
	
 /**
     * 获取最新入驻星球的用户列表
     */
    public function getScrollUser()
    {
        $sql = "SELECT qid,planet_id FROM " . $this->_tableName . " ORDER BY create_time DESC LIMIT 100";

        $stmt = $this->_dao->prepare($sql);
        $stmt->execute();

        $result = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $qids = array();
        foreach ($result as $value) {
            $qids[] = $value['qid'];
        }

        $userInfos = $this->getUserInfos($qids);

        $conf = Helper_Config::get('festival');

        $data = array();
        foreach ($result as $row) {
            $user_name = $userInfos[$row['qid']]['nickname'];
            $len=strlen($user_name);
            $head = substr($user_name,0,1);
            $end=substr($user_name,-1,1);
            if($len<=2)
            {
                $present= $head."*";
            }
            else
            {
                $present= $head.str_repeat("*",$len-2).$end;
            }
            $data[] = $present. '已加入'.$conf['planet'][$row['planet_id']];
        }
        return $data;
    }
	
	
	
	downAction